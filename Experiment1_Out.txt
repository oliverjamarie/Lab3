RUNNING Experiment 1A
DONE in 	0.009169	 seconds or 	0.000152817	 minutes
DONE in 	0.00949	 seconds or 	0.000158167	 minutes
DONE in 	0.009465	 seconds or 	0.00015775	 minutes
DONE in 	0.010489	 seconds or 	0.000174817	 minutes
DONE in 	0.013941	 seconds or 	0.00023235	 minutes
DONE in 	0.005249	 seconds or 	8.74833e-05	 minutes
DONE in 	0.006152	 seconds or 	0.000102533	 minutes
DONE in 	0.005706	 seconds or 	9.51e-05	 minutes
DONE in 	0.006303	 seconds or 	0.00010505	 minutes
DONE in 	0.007316	 seconds or 	0.000121933	 minutes
==19== Callgrind, a call-graph generating cache profiler
==19== Copyright (C) 2002-2017, and GNU GPL'd, by Josef Weidendorfer et al.
==19== Using Valgrind-3.16.1-36d6727e1d-20200622X and LibVEX; rerun with -h for copyright info
==19== Command: ./Experiment1A
==19== 
--19-- Valgrind options:
--19--    --tool=callgrind
--19--    --simulate-cache=yes
--19--    --branch-sim=yes
--19--    -v
--19-- Contents of /proc/version:
--19--   Linux version 5.10.25-linuxkit (root@buildkitsandbox) (gcc (Alpine 9.2.0) 9.2.0, GNU ld (GNU Binutils) 2.33.1) #1 SMP PREEMPT Tue Mar 23 09:24:45 UTC 2021
--19-- 
--19-- Arch and hwcaps: ARM64, LittleEndian, baseline
--19-- Page sizes: currently 4096, max supported 65536
--19-- Valgrind library directory: /usr/lib/valgrind
--19-- Warning: Cannot auto-detect cache config, using defaults.
--19--          Run with -v to see.
==19== Cache configuration used:
==19==   I1: 16,384 B, 4-way, 64 B lines
==19==   D1: 16,384 B, 4-way, 64 B lines
==19==   LL: 262,144 B, 8-way, 64 B lines
==19== For interactive control, run 'callgrind_control -h'.
--19-- Reading syms from /Users/oliver/Documents/GitHub/Lab3/Experiment1A
--19-- Reading syms from /lib/ld-musl-aarch64.so.1
--19--    object doesn't have a symbol table
--19-- Reading syms from /usr/lib/valgrind/callgrind-arm64-linux
--19--    object doesn't have a dynamic symbol table
--19-- Scheduler: using generic scheduler lock implementation.
==19== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-19-by-???-on-9c37a43fdb66
==19== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-19-by-???-on-9c37a43fdb66
==19== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-19-by-???-on-9c37a43fdb66
==19== 
==19== TO CONTROL THIS PROCESS USING vgdb (which you probably
==19== don't want to do, unless you know exactly what you're doing,
==19== or are doing some strange experiment):
==19==   /usr/lib/valgrind/../../bin/vgdb --pid=19 ...command...
==19== 
==19== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==19==   /path/to/gdb ./Experiment1A
==19== and then give GDB the following command
==19==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=19
==19== --pid is optional if only one valgrind process is running
==19== 
--19-- Reading syms from /usr/lib/valgrind/vgpreload_core-arm64-linux.so
--19-- Reading syms from /usr/lib/libstdc++.so.6.0.28
--19--    object doesn't have a symbol table
--19-- Reading syms from /usr/lib/libgcc_s.so.1
--19--    object doesn't have a symbol table
DONE in 	0.904734	 seconds or 	0.0150789	 minutes
==19== 
--19-- Start dumping at BB 5434135 (Prg.Term.)...
--19-- Dump to /Users/oliver/Documents/GitHub/Lab3/callgrind.out.19
--19-- Dumping done.
==19== Events    : Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
==19== Collected : 46681889 12175318 4108436 1857 92010 64962 1366 76392 64165 3064399 23694 4812 277
==19== 
==19== I   refs:      46,681,889
==19== I1  misses:         1,857
==19== LLi misses:         1,366
==19== I1  miss rate:       0.00%
==19== LLi miss rate:       0.00%
==19== 
==19== D   refs:      16,283,754  (12,175,318 rd + 4,108,436 wr)
==19== D1  misses:       156,972  (    92,010 rd +    64,962 wr)
==19== LLd misses:       140,557  (    76,392 rd +    64,165 wr)
==19== D1  miss rate:        1.0% (       0.8%   +       1.6%  )
==19== LLd miss rate:        0.9% (       0.6%   +       1.6%  )
==19== 
==19== LL refs:          158,829  (    93,867 rd +    64,962 wr)
==19== LL misses:        141,923  (    77,758 rd +    64,165 wr)
==19== LL miss rate:         0.2% (       0.1%   +       1.6%  )
==19== 
==19== Branches:       3,069,211  ( 3,064,399 cond +     4,812 ind)
==19== Mispredicts:       23,971  (    23,694 cond +       277 ind)
==19== Mispred rate:         0.8% (       0.8%     +       5.8%   )
Ran Experiment 1A


RUNNING Experiment 1B
DONE in 	0.009771	 seconds or 	0.00016285	 minutes
DONE in 	0.009007	 seconds or 	0.000150117	 minutes
DONE in 	0.011363	 seconds or 	0.000189383	 minutes
DONE in 	0.012291	 seconds or 	0.00020485	 minutes
DONE in 	0.012473	 seconds or 	0.000207883	 minutes
DONE in 	0.009497	 seconds or 	0.000158283	 minutes
DONE in 	0.009717	 seconds or 	0.00016195	 minutes
DONE in 	0.00931	 seconds or 	0.000155167	 minutes
DONE in 	0.010519	 seconds or 	0.000175317	 minutes
DONE in 	0.01107	 seconds or 	0.0001845	 minutes
==32== Callgrind, a call-graph generating cache profiler
==32== Copyright (C) 2002-2017, and GNU GPL'd, by Josef Weidendorfer et al.
==32== Using Valgrind-3.16.1-36d6727e1d-20200622X and LibVEX; rerun with -h for copyright info
==32== Command: ./Experiment1B
==32== 
--32-- Valgrind options:
--32--    --tool=callgrind
--32--    --simulate-cache=yes
--32--    --branch-sim=yes
--32--    -v
--32-- Contents of /proc/version:
--32--   Linux version 5.10.25-linuxkit (root@buildkitsandbox) (gcc (Alpine 9.2.0) 9.2.0, GNU ld (GNU Binutils) 2.33.1) #1 SMP PREEMPT Tue Mar 23 09:24:45 UTC 2021
--32-- 
--32-- Arch and hwcaps: ARM64, LittleEndian, baseline
--32-- Page sizes: currently 4096, max supported 65536
--32-- Valgrind library directory: /usr/lib/valgrind
--32-- Warning: Cannot auto-detect cache config, using defaults.
--32--          Run with -v to see.
==32== Cache configuration used:
==32==   I1: 16,384 B, 4-way, 64 B lines
==32==   D1: 16,384 B, 4-way, 64 B lines
==32==   LL: 262,144 B, 8-way, 64 B lines
==32== For interactive control, run 'callgrind_control -h'.
--32-- Reading syms from /Users/oliver/Documents/GitHub/Lab3/Experiment1B
--32-- Reading syms from /lib/ld-musl-aarch64.so.1
--32--    object doesn't have a symbol table
--32-- Reading syms from /usr/lib/valgrind/callgrind-arm64-linux
--32--    object doesn't have a dynamic symbol table
--32-- Scheduler: using generic scheduler lock implementation.
==32== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-32-by-???-on-9c37a43fdb66
==32== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-32-by-???-on-9c37a43fdb66
==32== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-32-by-???-on-9c37a43fdb66
==32== 
==32== TO CONTROL THIS PROCESS USING vgdb (which you probably
==32== don't want to do, unless you know exactly what you're doing,
==32== or are doing some strange experiment):
==32==   /usr/lib/valgrind/../../bin/vgdb --pid=32 ...command...
==32== 
==32== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==32==   /path/to/gdb ./Experiment1B
==32== and then give GDB the following command
==32==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=32
==32== --pid is optional if only one valgrind process is running
==32== 
--32-- Reading syms from /usr/lib/valgrind/vgpreload_core-arm64-linux.so
--32-- Reading syms from /usr/lib/libstdc++.so.6.0.28
--32--    object doesn't have a symbol table
--32-- Reading syms from /usr/lib/libgcc_s.so.1
--32--    object doesn't have a symbol table
DONE in 	0.781942	 seconds or 	0.0130324	 minutes
==32== 
--32-- Start dumping at BB 5434151 (Prg.Term.)...
--32-- Dump to /Users/oliver/Documents/GitHub/Lab3/callgrind.out.32
--32-- Dumping done.
==32== Events    : Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
==32== Collected : 46681930 12175319 4108436 1858 1029510 64962 1367 76743 64165 3064407 23698 4812 277
==32== 
==32== I   refs:      46,681,930
==32== I1  misses:         1,858
==32== LLi misses:         1,367
==32== I1  miss rate:       0.00%
==32== LLi miss rate:       0.00%
==32== 
==32== D   refs:      16,283,755  (12,175,319 rd + 4,108,436 wr)
==32== D1  misses:     1,094,472  ( 1,029,510 rd +    64,962 wr)
==32== LLd misses:       140,908  (    76,743 rd +    64,165 wr)
==32== D1  miss rate:        6.7% (       8.5%   +       1.6%  )
==32== LLd miss rate:        0.9% (       0.6%   +       1.6%  )
==32== 
==32== LL refs:        1,096,330  ( 1,031,368 rd +    64,962 wr)
==32== LL misses:        142,275  (    78,110 rd +    64,165 wr)
==32== LL miss rate:         0.2% (       0.1%   +       1.6%  )
==32== 
==32== Branches:       3,069,219  ( 3,064,407 cond +     4,812 ind)
==32== Mispredicts:       23,975  (    23,698 cond +       277 ind)
==32== Mispred rate:         0.8% (       0.8%     +       5.8%   )
Ran Experiment 1B
